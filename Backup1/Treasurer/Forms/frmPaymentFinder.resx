<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJnMmf+bzJv/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJLIkgmez57/ueC5/7rg
        uv+fzp//ksiSBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTx5N1pdWl/7ji
        uP++5b7/v+W//73ivf+l1KX/kciRWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlMiU06na
        qf+547n/ueK5/7riuv+94r3/v+W//8DjwP+s16z/k8mSrQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJjL
        mP+v3a//t+S3/7jjuP+54rn/u+K7/7zivP+84rz/wOPA/8Lkwv+z3LL/oMuO6QAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJTI
        lBudz53/seGx/7fkt/+347f/uOK4/7niuf+64br/u+K7/7zivP++4r7/wePB/8Xlw//I4LD/gKip/wDQ
        //4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACUx5SEo9Wj/7Lisv+25Lb/tOK0/7bitv+34rf/uOG4/7riuv+74rv/vOK8/73ivf++4r7/wuXB/9Pm
        vf+Ktbb/Q8f2/xfU//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAlsmW3abZpv+y5LL/s+Wz/7Pis/+14rX/teK1/7fit/+54rn/u+O7/7zivP+84rz/vuK+/77i
        vv/C48D/0ea8/4y6u/83pNv/SaPR/yzW//8A0f9HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJrNmv+s36z/seWx/7Lksv+y4rL/s+Kz/7TitP+24rb/uOK4/7jiuP+64rr/vOK8/7zi
        vP++4r7/v+K//8LjwP/R5rz/irq6/zet4v8ph8D/SZ3M/zzQ+P8A1P+fAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACWyZb7qdyp/7TntP+x5LH/sOKw/7Lisv+z4rP/teK1/7bitv+34rf/uOG4/7bf
        tv+23rb/uuG6/7zivP++4r7/wuXA/8/luv+Iubr/Sbjo/0Gazf83k8f/QpXG/0bG7/8A1v/pAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJfLl/2p3qn/s+az/6/ir/+w4rD/suKy/7Pis/+14rX/tuK2/7Xh
        tf+y3rL/2fXZ/+L64v+13rX/ud+5/73ivf/C48D/0Oa7/4O4u/9Wvuv/VqbS/1Gn0v9EnM3/R5TG/0m+
        7f8A0f+0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAl8uX+6ncqf+z5rP/r+Kv/7DisP+y4rL/s+Kz/7Xi
        tf+x37H/t+K3/9T01P/S8tL/5fzl/+z/7P+64Lr/uN64/8HjwP/P5Lv/gLW5/2nI7/9vtNn/Y7DY/1qs
        1f9Qoc//Sa3j/2vWx/+oyoQTAAAAAAAAAAAAAAAAAAAAAAAAAACXy5f7qdyp/7Llsv+w4rD/sOOw/7Li
        sv+z4bP/r92v/7vlu//T99P/1/fX/9v52//J7cn/2/bb//P/8//F5sX/ud+3/87juv98tLj/etH1/4zB
        3/98vd7/crjb/2Ws1f9Qt+n/j+PX/7vWnv+TyZFoAAAAAAAAAAAAAAAAAAAAAJfLl/up3Kn/suWy/6/i
        r/+w4rD/seGx/63drf/C7cL/0fjR/9P40//m/+b/6//r/+T85P/M7Mz/0/DT//b/9v/U7tP/w92v/3ix
        t/+N2fn/ps3l/5XI5P+KxOH/gLrc/2LA7f+K4t3/1Oa7/6/Yrf+SyJK7AAAAAAAAAAAAAAAAl8uX+6nc
        qf+y5bL/r+Kv/67frv+u3q7/yPPI/832zf/T+tP/6P/o/+n/6f/q/+r/7f/t/+r/6v/T79P/zevN//b/
        9f/y+N3/c6+z/5rg+//A2uz/rNTq/6LP5/+bx+L/d8rx/4Pg2P/U5bz/xOTC/7TctP+VyZX0AAAAAAAA
        AACXy5f7qNyo/7Hmsf+s36z/seOx/8r4yv/H88f/0/vT/+T/5P/N8c3/wOTA/8zszP/j/eP/7f/t//D/
        8P/c9dv/0/HP///23v9vrLv/qOn9/9Xk8P+/3u//uNvt/7XW6v+L0/b/gd7X/9Dkt//C48H/w+TD/7bf
        tv+bzZv/AAAAAJfLl/un26f/reCt/7fpt//I+cj/wPDA/9L90v/i/+L/wurC/5PAk/+m0Kb/t923/83r
        zf/r/+v/8P/w/////f/r69L/d5+h/3DU7f/X/P//4fD4/9no8//K5PH/yt7u/5zc+v9/3Nf/z+S4/8Di
        v/+/4r//w+XD/7TdtP+Xy5f/l8uX/Kfbp//B9MH/w/bD/7vvu//T/9P/2P/Y/9//3/+14bX/i7mL/6TN
        pP+02bT/z+/O/+7/7P/8//X/6OPR/3GmtP993/n/yP3//8P1///T9///6/b8/+nx9//i6/T/rOT//3vb
        1v/Q5Lj/weLA/77ivv/A5cD/td+1/5fLl/2Xypf+suWy/9j/2P/B9MH/tuq2/8b2xv/U/9T/2//b/9v/
        2/+75Lv/tt22/83uzf/p/+j//P/w/9LRv/9jqbz/jez//672//+h7v//s/D//8P1///X+v//9f3+///7
        +//C7v//edrV/87juP/A4r//vuK+/8DlwP+03bT/l8uX/AAAAACTxpPQotWi/8b5xv/O/87/ve69/8Dv
        wP/R/NH/3//f/+T/4//l/+T/7f/q//r/6P+6wLL/YrLK/5jy//+I7P//gOf//5br//+k7f//tfD//8T0
        ///X+f///////9v5//942dX/zuK4/8Div/++4r7/weXB/7Xdtf+Xy5f8AAAAAAAAAAAAAAAAksWS/67h
        rv/P/8//y/zL/8DuwP/M9sz/3f/c/+f/5f/y/tr/oLKr/2vB2v+Z9P//YuL//2Ph//995f//jej//5vr
        //+r7v//u/H//8r1///w/f//0Pn//27W0v/L4bT/v+K+/77ivv/A5cD/td21/5fLl/wAAAAAAAAAAAAA
        AAAAAAAAkcSRaZjLmP+97r3/1f/V/834zP/S/c3/4u7H/4qpq/970uv/iPL//zbY//9I3P//X+D//3Dj
        //+A5v//j+n//57s//+t7///x/T//9H3//9X3Pn/vvDu/9Dmwf+53rj/veK+/8Hlwf+03bT/l8uX/AAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJDDj9Ck1qL/2v7L/9fft/90pa7/i+L6/2jq//8N0P//K9X//0Ha
        //9T3f//Y+D//3Pj//+C5///kOn//6vv//+p7v//ZOL//7Tn3P/X5sH/8fzv/8vpy/+23rb/weTB/7Pd
        s/+Xy5f8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYwY7/dLHA/5Pt//863f//AMn//xDR
        //8o1P//ONf//0jb//9Y3v//aOH//3Pk//+R6v//iej//2bh/P/0/f7//////+b05P+84Lv/5vfm/9Xv
        1f+44Lj/tNy0/5fLl/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADI/x0v3P//nO///wjN
        //8Axv//AMz//xnS//8p1f//Odj//0jb//9S3f//c+T//2zj//924vT///3x//v66//m8uP/+//6//P9
        8/+94L3/2PHY/+L34v+y3LL/l8uX/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADJ
        /xMV0P//eOX//1re//8AzP//AMz//xzS//8s1v//NNb//1nf//9d4P//l+v0////8/////T/5PLi/9Ho
        0f/E4sT/3fHd//X/9f/K6cr/1/LX/8rqyv+Wypb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAyP93PNj//3fl//801///AM3//w/Q//9C2v//W9///7/29v////T////4//7/
        /P/6/fr/3e7d/7jbuP+63rr/9P70/9703v+i0qL/lsuW/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMz/1Vbe//9h4P//Qtv//2jl///H8N3/+/vc//v/
        9v/7//n/+v/5////////////+f35//r/+v/H5cf/l8uX/5DIkHEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMf/ARXS//8u0vf/p9Sk//P4
        1P/n+eL/2vHZ/+777v/+//7////////////w+fD/rteu/43Gjf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAlseM/73hvP/l+eX/3fLd/+f35///////0enR/5jLmP+Nxo2OAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjMSMdJvNm//U7tT/5fXl/7LZsv+Nx43/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI/Gj8yez57/kMiQmwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+f///+B////AP///gB///wAP//wAA//4AAH/8AAAf+AAAD/AAAAfwAA
        AD8AAAAfAAAADwAAAAcAAAADAAAAAQAAAAAAAAAAAAAAAIAAAADgAAAA8AAAAPwAAAD/AAAA/wAAAP+A
        AAD/4AAB//gAA//8AA///8Af///gf///+P8=
</value>
  </data>
</root>